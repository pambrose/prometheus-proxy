[versions]
# Plugins
config = "5.6.7"
detekt = "1.23.8"
kotlinter = "5.1.1"
kotlin = "2.2.0"
kover = "0.9.1"
protobuf = "0.9.5"
shadow = "8.3.7"
versions = "0.52.0"

# Libraries
annotation = "1.3.2"
datetime = "0.6.2"
dropwizard = "4.2.33"
gengrpc = "1.4.3"
grpc = "1.73.0"
jcommander = "2.0"
jetty = "10.0.25"
kluent = "1.73"
ktor = "3.2.0"
logback = "1.5.18"
logging = "7.0.7"
# Keep in sync with grpc
tcnative = "2.0.72.Final"
prometheus = "0.16.0"
# Keep in sync with grpc
protoc = "3.25.4"
serialization = "1.8.1"
slf4j = "2.0.13"
typesafe = "1.4.3"
utils = "2.3.11"
zipkin = "6.3.0"

[libraries]
# Kotlin
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }

# gRPC
grpc-netty = { module = "io.grpc:grpc-netty-shaded", version.ref = "grpc" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
grpc-services = { module = "io.grpc:grpc-services", version.ref = "grpc" }
grpc-kotlin-stub = { module = "io.grpc:grpc-kotlin-stub", version.ref = "gengrpc" }
netty-tcnative = { module = "io.netty:netty-tcnative-boringssl-static", version.ref = "tcnative" }

# Common Utils
utils-core = { module = "com.github.pambrose.common-utils:core-utils", version.ref = "utils" }
utils-corex = { module = "com.github.pambrose.common-utils:corex-utils", version.ref = "utils" }
utils-dropwizard = { module = "com.github.pambrose.common-utils:dropwizard-utils", version.ref = "utils" }
utils-guava = { module = "com.github.pambrose.common-utils:guava-utils", version.ref = "utils" }
utils-grpc = { module = "com.github.pambrose.common-utils:grpc-utils", version.ref = "utils" }
utils-jetty = { module = "com.github.pambrose.common-utils:jetty-utils", version.ref = "utils" }
utils-ktor-client = { module = "com.github.pambrose.common-utils:ktor-client-utils", version.ref = "utils" }
utils-prometheus = { module = "com.github.pambrose.common-utils:prometheus-utils", version.ref = "utils" }
utils-service = { module = "com.github.pambrose.common-utils:service-utils", version.ref = "utils" }
utils-zipkin = { module = "com.github.pambrose.common-utils:zipkin-utils", version.ref = "utils" }

# Jetty
jetty-servlet = { module = "org.eclipse.jetty:jetty-servlet", version.ref = "jetty" }

# Misc
annotation-api = { module = "javax.annotation:javax.annotation-api", version.ref = "annotation" }
jcommander = { module = "org.jcommander:jcommander", version.ref = "jcommander" }
typesafe-config = { module = "com.typesafe:config", version.ref = "typesafe" }

# Prometheus
prometheus-simpleclient = { module = "io.prometheus:simpleclient", version.ref = "prometheus" }

# Ktor
ktor-client = { module = "io.ktor:ktor-client", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-network = { module = "io.ktor:ktor-network", version.ref = "ktor" }
ktor-network-tls = { module = "io.ktor:ktor-network-tls", version.ref = "ktor" }
ktor-server = { module = "io.ktor:ktor-server", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor" }

# Dropwizard
dropwizard-metrics = { module = "io.dropwizard.metrics:metrics-healthchecks", version.ref = "dropwizard" }

# Zipkin
zipkin-brave = { module = "io.zipkin.brave:brave-instrumentation-grpc", version.ref = "zipkin" }

# Logging
kotlin-logging = { module = "io.github.oshai:kotlin-logging", version.ref = "logging" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
slf4j-jul = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }

# Testing
kluent = { module = "org.amshove.kluent:kluent", version.ref = "kluent" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
protobuf = { id = "com.google.protobuf", version.ref = "protobuf" }
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versions" }
shadow = { id = "com.gradleup.shadow", version.ref = "shadow" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "config" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
