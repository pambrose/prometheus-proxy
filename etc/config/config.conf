
proxy {

  agent.port = 50051                        // Listen port for agent connections

  http {
    port = 8080                             // Listen port for proxied scrapes
    maxThreads = -1
    minThreads = -1
    idleTimeoutSecs = 45
  }

  admin {
    enabled = false                         // Enable Admin servlets
    port = 8092                             // Admin servlets port
    pingPath = "ping"                       // Ping servlet path
    versionPath = "version"                 // Version servlet path
    healthCheckPath = "healthcheck"         // HealthCheck servlet path
    threadDumpPath = "threaddump"           // ThreadDump servlet path
    debugEnabled = false                    // Enable proxy debug servlet on admin port
    recentRequestsQueueSize = 50            // Size of queue for recent activities on debug servlet
  }

  tls {
    certChainFilePath = ""                  // Server certificate chain file path
    privateKeyFilePath = ""                 // Server private key file path
    trustCertCollectionFilePath = ""        // Trust certificate collection file path
  }

  metrics {
    enabled = false                         // Enable Proxy metrics
    port = 8082                             // Listen port for metrics endpoint
    path = "metrics"                        // Path for metrics endpoint

    standardExportsEnabled = false          // Include standard export metrics
    memoryPoolsExportsEnabled = false       // Include JVM memory pool metrics
    garbageCollectorExportsEnabled = false  // Include JVM garbage collector metrics
    threadExportsEnabled = false            // Include JVM thread metrics
    classLoadingExportsEnabled = false      // Include JVM class loading metrics
    versionInfoExportsEnabled = false       // Include JVM version info metrics

    grpc {
      metricsEnabled = false                // Include gRPC metrics
      allMetricsReported = false            // Include all vs just cheap metrics
    }
  }

  internal {
    staleAgentCheckEnabled = true
    maxAgentInactivitySecs = 15             // Seconds of inactivity before agent is evicted
    staleAgentCheckPauseSecs = 10           // Pause interval for agent cleanup

    scrapeRequestTimeoutSecs = 5
    scrapeRequestCheckMillis = 500
    scrapeRequestBacklogUnhealthySize = 25  // Threshold for returning an unhealthy healthcheck
    scrapeRequestMapUnhealthySize = 25      // Threshold for returning an unhealthy healthcheck

    chunkContextMapUnhealthySize = 25       // Threshold for returning an unhealthy healthcheck

    zipkin {
      enabled = false
      hostname = "localhost"
      port = 9411
      path = "api/v2/spans"
      serviceName = "prometheus-proxy"
      grpcReportingEnabled = false
    }

    blitz {
      enabled = false
      path = "mu-dd4bffbb-ff2e9926-5a80952c-1c6cb64d.txt"
    }
  }
}

agent {
  name = ""                                 // Agent name used in metrics reporting

  // See: https://github.com/grpc/grpc.github.io/issues/371
  chunkContentSizeKbs = 32                  // Threshold for chunking data to Proxy and buffer size
  minGzipSizeBytes = 512                    // Minimum size for content to be gzipped

  proxy {
    hostname = "localhost"                  // Proxy hostname
    port = 50051                            // Proxy port
  }

  admin {
    enabled = false                         // Enable Admin servlets
    port = 8093                             // Admin servlets port
    pingPath = "ping"                       // Ping servlet path
    versionPath = "version"                 // Version servlet path
    healthCheckPath = "healthcheck"         // HealthCheck servlet path
    threadDumpPath = "threaddump"           // ThreadDump servlet path
    debugEnabled = false                    // Enable agent debug servlet on admin port
  }

  tls {
    overrideAuthority = ""                  // Overide authority
    certChainFilePath = ""                  // Client certificate chain file path
    privateKeyFilePath = ""                 // Client private key file path
    trustCertCollectionFilePath = ""        // Trust certificate collection file path
  }

  metrics {
    enabled = false                         // Enable Agent metrics
    port = 8083                             // Listen port for metrics endpoint
    path = "metrics"                        // Path for metrics endpoint

    standardExportsEnabled = false          // Include standard export metrics
    memoryPoolsExportsEnabled = false       // Include JVM memory pool metrics
    garbageCollectorExportsEnabled = false  // Include JVM garbage collector metrics
    threadExportsEnabled = false            // Include JVM thread metrics
    classLoadingExportsEnabled = false      // Include JVM class loading metrics
    versionInfoExportsEnabled = false       // Include JVM version info metrics

    grpc {
      metricsEnabled = false                // Include gRPC metrics
      allMetricsReported = false            // Include all vs just cheap metrics
    }
  }

  pathConfigs: [                             // List of path configs registered with a Proxy
    {
      name: String                          // Endpint name
      path: String                          // Path used by the proxy
      url: String                           // URL accessed by the Agent
    }
  ]

  internal {
    reconnectPauseSecs = 3                  // Pause interval between connect attempts

    heartbeatEnabled = true
    heartbeatCheckPauseMillis = 500         // Pause interval when checking for inactivity
    heartbeatMaxInactivitySecs = 5          // Max inactivity before hearbeat sent

    scrapeRequestBacklogUnhealthySize = 25  // Threshold for returning an unhealthy healthcheck

    zipkin {
      enabled = false
      hostname = "localhost"
      port = 9411
      path = "api/v2/spans"
      serviceName = "prometheus-agent"
      grpcReportingEnabled = false
    }
  }
}